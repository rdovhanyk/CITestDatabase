<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" ToolsVersion="4.0">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <Name>CITestDatabase</Name>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectVersion>4.1</ProjectVersion>
    <ProjectGuid>{591e2baf-afa2-43e9-b3ae-5be88ff45153}</ProjectGuid>
    <DSP>Microsoft.Data.Tools.Schema.Sql.Sql110DatabaseSchemaProvider</DSP>
    <OutputType>Database</OutputType>
    <RootPath>
    </RootPath>
    <RootNamespace>CITestDatabase</RootNamespace>
    <AssemblyName>CITestDatabase</AssemblyName>
    <ModelCollation>1058,CI</ModelCollation>
    <DefaultFileStructure>BySchemaAndSchemaType</DefaultFileStructure>
    <DeployToDatabase>True</DeployToDatabase>
    <TargetFrameworkVersion>v4.5.2</TargetFrameworkVersion>
    <TargetLanguage>CS</TargetLanguage>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <SqlServerVerification>False</SqlServerVerification>
    <IncludeCompositeObjects>True</IncludeCompositeObjects>
    <TargetDatabaseSet>True</TargetDatabaseSet>
    <DefaultCollation>Ukrainian_CI_AS</DefaultCollation>
    <DefaultFilegroup>PRIMARY</DefaultFilegroup>
    <PermissionSet>EXTERNAL_ACCESS</PermissionSet>
    <GenerateCreateScript>True</GenerateCreateScript>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <OutputPath>bin\Release\</OutputPath>
    <BuildScriptName>$(MSBuildProjectName).sql</BuildScriptName>
    <TreatWarningsAsErrors>False</TreatWarningsAsErrors>
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <DefineDebug>false</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <OutputPath>bin\Debug\</OutputPath>
    <BuildScriptName>$(MSBuildProjectName).sql</BuildScriptName>
    <TreatWarningsAsErrors>false</TreatWarningsAsErrors>
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <DefineDebug>true</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup>
    <VisualStudioVersion Condition="'$(VisualStudioVersion)' == ''">11.0</VisualStudioVersion>
    <!-- Default to the v11.0 targets path if the targets file for the current VS version is not found -->
    <SSDTExists Condition="Exists('$(MSBuildExtensionsPath)\Microsoft\VisualStudio\v$(VisualStudioVersion)\SSDT\Microsoft.Data.Tools.Schema.SqlTasks.targets')">True</SSDTExists>
    <VisualStudioVersion Condition="'$(SSDTExists)' == ''">11.0</VisualStudioVersion>
  </PropertyGroup>
  <Import Condition="'$(SQLDBExtensionsRefPath)' != ''" Project="$(SQLDBExtensionsRefPath)\Microsoft.Data.Tools.Schema.SqlTasks.targets" />
  <Import Condition="'$(SQLDBExtensionsRefPath)' == ''" Project="$(MSBuildExtensionsPath)\Microsoft\VisualStudio\v$(VisualStudioVersion)\SSDT\Microsoft.Data.Tools.Schema.SqlTasks.targets" />
  <ItemGroup>
    <Folder Include="Properties" />
    <Folder Include="dbo\" />
    <Folder Include="dbo\Tables\" />
    <Folder Include="stage\" />
    <Folder Include="stage\Tables\" />
    <Folder Include="dbo\Functions\" />
    <Folder Include="utils\" />
    <Folder Include="utils\Functions\" />
    <Folder Include="etl\" />
    <Folder Include="etl\Stored Procedures\" />
    <Folder Include="rep\" />
    <Folder Include="rep\Stored Procedures\" />
    <Folder Include="stage\Stored Procedures\" />
    <Folder Include="utils\Stored Procedures\" />
    <Folder Include="Security\" />
    <Folder Include="Scripts" />
    <Folder Include="Scripts\0.1" />
    <Folder Include="Scripts\0.2" />
  </ItemGroup>
  <ItemGroup>
    <Build Include="dbo\Tables\DimAdAccount.sql" />
    <Build Include="dbo\Tables\DimAffiliate.sql" />
    <Build Include="dbo\Tables\DimBusinessAccount.sql" />
    <Build Include="dbo\Tables\DimCampaign.sql" />
    <Build Include="dbo\Tables\DimDate.sql" />
    <Build Include="dbo\Tables\DimProduct.sql" />
    <Build Include="dbo\Tables\DimSource.sql" />
    <Build Include="dbo\Tables\DimTimeZone.sql" />
    <Build Include="dbo\Tables\FactCampaign.sql" />
    <Build Include="dbo\Tables\Settings.sql" />
    <Build Include="dbo\Tables\UserAffiliates.sql" />
    <Build Include="dbo\Tables\Users.sql" />
    <Build Include="stage\Tables\CakeCampaignInsightsUTC.sql" />
    <Build Include="stage\Tables\CakeClicks.sql" />
    <Build Include="stage\Tables\CakeConversions.sql" />
    <Build Include="stage\Tables\FBAdaccounts.sql" />
    <Build Include="stage\Tables\FBAds.sql" />
    <Build Include="stage\Tables\FBBusinessAccounts.sql" />
    <Build Include="stage\Tables\FBCampaignInsightsUTC.sql" />
    <Build Include="stage\Tables\FBCampaigns.sql" />
    <Build Include="stage\Tables\FBInsights.sql" />
    <Build Include="stage\Tables\FBObjectStorySpec.sql" />
    <Build Include="stage\Tables\StageErrorLog.sql" />
    <Build Include="dbo\Functions\GetLinkParameterValue.sql" />
    <Build Include="dbo\Functions\GetUSDaylightSaving.sql" />
    <Build Include="dbo\Functions\GetFirstDateOfYear.sql" />
    <Build Include="dbo\Functions\GetLastDateFromDimDate.sql" />
    <Build Include="utils\Functions\CSVToTable.sql" />
    <Build Include="dbo\Functions\GetDateMonthRange.sql" />
    <Build Include="etl\Stored Procedures\Load_DimAffiliate.sql" />
    <Build Include="etl\Stored Procedures\Load_DimBusinessAccount.sql" />
    <Build Include="etl\Stored Procedures\Load_DimTimeZone.sql" />
    <Build Include="rep\Stored Procedures\AlphaTeamHourlyDetailsReport.sql" />
    <Build Include="rep\Stored Procedures\param_AdAccount.sql" />
    <Build Include="rep\Stored Procedures\param_Affiliate.sql" />
    <Build Include="rep\Stored Procedures\param_BusinessAccount.sql" />
    <Build Include="rep\Stored Procedures\param_Campaign.sql" />
    <Build Include="rep\Stored Procedures\param_TimeZone.sql" />
    <Build Include="stage\Stored Procedures\CleanAdAccountData.sql" />
    <Build Include="stage\Stored Procedures\Load_CakeCampaignInsightsUTC.sql" />
    <Build Include="stage\Stored Procedures\Load_FBCampaignInsightsUTC.sql" />
    <Build Include="utils\Stored Procedures\GetAdDetails.sql" />
    <Build Include="utils\Stored Procedures\GetDaysRange.sql" />
    <Build Include="utils\Stored Procedures\GetDoubleCampaignsId.sql" />
    <Build Include="utils\Stored Procedures\GetDoubleFbIds.sql" />
    <Build Include="stage\Stored Procedures\CleanStage.sql" />
    <Build Include="etl\Stored Procedures\Load_DimDate.sql" />
    <Build Include="etl\Stored Procedures\GetLastLoadDate.sql" />
    <Build Include="etl\Stored Procedures\SetLastLoadDate.sql" />
    <Build Include="etl\Stored Procedures\Load_DimProduct.sql" />
    <Build Include="etl\Stored Procedures\Load_DimAd.sql" />
    <Build Include="etl\Stored Procedures\Load_DimCampaign.sql" />
    <Build Include="etl\Stored Procedures\Load_FactCampaign.sql" />
    <Build Include="rep\Stored Procedures\AlphaTeamReport.sql" />
    <Build Include="etl\Stored Procedures\Load_DimAdAccount.sql" />
    <Build Include="Security\etl.sql" />
    <Build Include="Security\rep.sql" />
    <Build Include="Security\stage.sql" />
    <Build Include="Security\utils.sql" />
    <Build Include="ExtendedProperties.sql" />
    <Build Include="Security\test.sql" />
  </ItemGroup>
  <ItemGroup>
    <None Include="CITestDatabase.publish.xml" />
    <None Include="Scripts\0.1\update1.sql" />
    <None Include="Scripts\0.1\update2.sql" />
    <None Include="Scripts\0.2\update3.sql" />
  </ItemGroup>
  <ItemGroup>
    <None Include="Scripts\0.1\Script.PostDeployment_0.1.sql" />
    <PostDeploy Include="Scripts\0.2\Script.PostDeployment_0.2.sql" />
  </ItemGroup>
  <!-- 
	Custom targets and properties added so that we can specify the database to publish to using command line parameters with VS 2012 .sqlproj projects, like we did with VS 2010 .dbproj projects.
	This allows us to specify the MSBuild command-line parameters TargetDatabaseName, and TargetConnectionString when Publishing, and PublishToDatabase when Building.
	I also stumbled across the undocumented parameter, PublishScriptFileName, which can be used to specify the generated sql script file name, just like DeployScriptFileName used to in VS 2010 .dbproj projects.
	Taken from: http://blog.danskingdom.com/using-msbuild-to-publish-a-vs-2012-ssdt-sqlproj-database-project-the-same-way-as-a-vs-2010-dbproj-database-project/
  -->
  <PropertyGroup Condition="'$(TargetDatabaseName)' != '' Or '$(TargetConnectionString)' != ''">
    <PublishToDatabase Condition="'$(PublishToDatabase)' == ''">False</PublishToDatabase>
    <TargetConnectionStringXml Condition="'$(TargetConnectionString)' != ''">
      &lt;TargetConnectionString xdt:Transform="Replace"&gt;$(TargetConnectionString)&lt;/TargetConnectionString&gt;
    </TargetConnectionStringXml>
    <TargetDatabaseXml Condition="'$(TargetDatabaseName)' != ''">
      &lt;TargetDatabaseName xdt:Transform="Replace"&gt;$(TargetDatabaseName)&lt;/TargetDatabaseName&gt;
    </TargetDatabaseXml>
    <TransformPublishXml>
        &lt;Project xmlns:xdt="http://schemas.microsoft.com/XML-Document-Transform" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"&gt;
        &lt;PropertyGroup&gt;$(TargetConnectionStringXml)$(TargetDatabaseXml)&lt;/PropertyGroup&gt;
        &lt;/Project&gt;
    </TransformPublishXml>
    <SqlPublishProfilePath Condition="'$([System.IO.Path]::IsPathRooted($(SqlPublishProfilePath)))' == 'False'">$(MSBuildProjectDirectory)\$(SqlPublishProfilePath)</SqlPublishProfilePath>
    <!-- In order to do a transform, we HAVE to change the SqlPublishProfilePath -->
    <TransformOutputFile>$(MSBuildProjectDirectory)\Transformed_$(TargetDatabaseName).publish.xml</TransformOutputFile>
    <TransformScope>$([System.IO.Path]::GetFullPath($(MSBuildProjectDirectory)))</TransformScope>
    <TransformStackTraceEnabled Condition="'$(TransformStackTraceEnabled)'==''">False</TransformStackTraceEnabled>
  </PropertyGroup>
  <Target Name="AfterBuild" Condition="'$(PublishToDatabase)'=='True'">
    <CallTarget Targets="Publish" />
  </Target>
  <UsingTask TaskName="ParameterizeTransformXml" AssemblyFile="$(MSBuildExtensionsPath)\Microsoft\VisualStudio\v$(VisualStudioVersion)\Web\Microsoft.Web.Publishing.Tasks.dll" />
  <Target Name="BeforePublish" Condition="'$(TargetDatabaseName)' != '' Or '$(TargetConnectionString)' != ''">
    <Message Text="TargetDatabaseName = '$(TargetDatabaseName)', TargetConnectionString = '$(TargetConnectionString)', PublishScriptFileName = '$(PublishScriptFileName)', Transformed Sql Publish Profile Path = '$(TransformOutputFile)'" Importance="high" />
    <!-- If TargetDatabaseName or TargetConnectionString, is passed in then we use the tokenize transform to create a parameterized sql publish file -->
    <Error Condition="!Exists($(SqlPublishProfilePath))" Text="The SqlPublishProfilePath '$(SqlPublishProfilePath)' does not exist, please specify a valid file using msbuild /p:SqlPublishProfilePath='Path'" />
    <ParameterizeTransformXml Source="$(SqlPublishProfilePath)" IsSourceAFile="True" Transform="$(TransformPublishXml)" IsTransformAFile="False" Destination="$(TransformOutputFile)" IsDestinationAFile="True" Scope="$(TransformScope)" StackTrace="$(TransformStackTraceEnabled)" SourceRootPath="$(MSBuildProjectDirectory)" />
    <PropertyGroup>
      <SqlPublishProfilePath>$(TransformOutputFile)</SqlPublishProfilePath>
    </PropertyGroup>
  </Target>
</Project>